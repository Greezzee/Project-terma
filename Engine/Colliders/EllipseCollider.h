#pragma once
#include "../Gameplay/GameObject.h"
#include "../Utility/Coordinate.h"
/*!
* Коллайдер в виде эллипса
* Хранить можно либо как свойство Gameobject, либо просто как отдельный объект
* Задаёт эллипс в пространстве.
* 
* 
* 
* IsCollide() НЕ ТРОГАТЬ
* Остальное СИСТЕМНОЕ
*/

class EllipseCollider
{
public:
	/*!
	* Инициализация нулевого эллипса (точки с координатами (0, 0))
	* Не имеет родительского объекта (владельца)
	*/
	void Init();

	/*!
	* Инициализация нулевого эллипса (точки с координатами (0, 0))
	* Имеет родительский объект owner
	*/
	void Init(GameObject* owner);

	/*!
	* Инициализация эллипса
	* pos - позиция центра эллипса
	* angle - угол поворота эллипса в РАДИАНАХ относительно центра (0 означает канонический вид, поворот против часовой)
	* size - длины полуосей
	* owner - родительский объект 
	*/
	void Init(Vector2F pos, float angle, Vector2F size, GameObject* owner);
protected:
	GameObject* _my_obj; //! Объект, к которому привязан коллайдер. Пока никак не используется
	Vector2F _pos, _size;//! Позиция центра эллипса и длина его полуосей
	float _angle;        //! Угол поворота эллипса относительно центра против часовой стрелки в радианах

	const static unsigned COLLIDE_ITERATIONS; //! Определяет точность коллизий. Больше значение - точнее, но дольше. Не использовать числа меньше 4

	friend class Collider;
};

