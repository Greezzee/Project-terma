#pragma once

/*!
* Абстрактная сцена, от которой должны быть наследованы все сцены с переопределением необходимых функций.
* 
* Саму структуру абстрактной сцены НЕ ТРОГАТЬ.
* Дочернии сцены МОЖНО ИЗМЕНЯТЬ так, как вам нужно
* 
* Готовы три сцены: MainMenu, CharacterChoose и Gameplay, на примерах который можно рассмотреть методы работы сцен.
* MainMenu вызывает другие сцены и закрывается
* CharacterChoose работает с консолью
* Gameplay работает с Gamefield и всем что с ним связано
*/
class Scene
{
public:
	// CONSTRUCTOR AND DESTRUCTOR
	//----------------------------------
	Scene();
	virtual ~Scene() {};
	//----------------------------------

	bool is_end; //! если true, сцена автоматически закроется по завершении кадра

	//! Инициализация вызывается либо вручную (тогда создавать сцену через OpenScene), либо автоматически (CreateScene)
	virtual void Init() = 0;

	//! Обновление вызывается автоматически каждый кадр
	virtual void Update() = 0;

	//! Вызывается автоматически при удалении сцены через SceneManager
	virtual void Destroy() = 0;

protected:
	bool is_paused; //! если true, сцена не будет обновляться (пока не реализовано)
};
