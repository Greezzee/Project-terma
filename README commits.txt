Данный файл имеет подробные описания коммитов, расписанные по датам.

Коммиты от 25.07.20:
- На основе существующего кода был создать проект Visual Studio. Исходный код НИКАК НЕ МЕНЯЛСЯ. Всё работает стабильно.
К проекту был подключён SFML версии 2.5.1 для 32-битных систем. Этот же sfml был подключён к проекту. 
Добавились папки Debuf и Realese, в котором лежат собранные на данный момент элементы проекта (объектники, .dll и .exe файлы). Эти папки не удалять, они важны для VS.
Добавлен .gitignore для успешных коммитов файлов проекта visual studio.
Изменения не должны были никак сказаться на работоспособности кода на других системах. 
- произошёл откат предлагаемых изменений в GameManager. Теперь основной файл игры (в вашем случае Project_terma) - сцена.
Добавлен файл Main.cpp, где находится функция int main() и не должно находиться НИЧЕГО, кроме неё. В нём же вы можете указать, какая сцена стартовая.
В функцию GameManager::Launch() добавлен новый параметр типа Scene*. Это указатель на уже созданную, проинициализированную главную сцену.
Она запускается первой.
Файлы GameManager были перенесены из папки Gameplay в новую папку GameManagment, так как до этого содержимое папки Gameplay не было единообразным.
- добавлены readme файлы, рекомендую ознакомиться.
- Теперь перед запуском GameManager::Launch() необходим запуск GameManager::Init() перед этим.
Немного изменена механика GraphicManager. Теперь есть возможность манипуляции библиотекой текстур, заложенной в GraphicManager в процессе игры.
Сильно советую прочитать комментарии к функциям GraphicManager, а также посмотреть пример, который реализован в сцене ProjectTerma
(загрузка текстуры, её рисование)

Коммиты от 28.07.20:
- Изменения в коллайдерах. Вместо старого Collider теперь два класса: EllipseCollider и SquareCollider. 
EllipseCollider работает аналогично старому Collider. Из него удалена функция IsCollideWith. Теперь необходимо использовать статичную функция IsCollide() в Collider.
Добавлен SquareCollider. Работает как коллайдер в форме параллелограмма. В Collider была добавлена перегрузка IsCollide() для квадратных коллайдеров.
Советую ознакомиться с комментариями в файле SquareCollider.
TODO: Добавить перегрузку IsCollide() для SquareCollider и EllipseCollider (пересечение коллайдеров разных типов)
Добавлен небольшой механизм работы с прямыми и отрезками (Класс Line в Line.h и некоторые функции). Там только самые необходимые функции, можно их дополнять 
Этот файл будет обновляться один раз в день, даже если коммитов в этот день было сделано несколько. Отдельные коммиты выделены минусом.